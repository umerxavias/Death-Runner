{"version":3,"sources":["random.js","Camera.js","util/MathUtil.js","Controller.js","GameObject.js","Entity.js","InputManager.js","ParticleSystem.js","Animation.js","Player.js","Render.js","ImageEffects.js","SpriteSheet.js","Sprite.js","SpriteSheetManager.js","Coin.js","Bullet.js","FinishLine.js","Game.js","data/SpriteSheets.js","App.js","reportWebVitals.js","index.js"],"names":["getRandom","min","max","Math","random","getRandomInteger","floor","Camera","constructor","game","this","startX","startY","endX","endY","mut","followingObject","followSpeed","followX","followY","minX","minY","maxX","maxY","shakeTick","shakeMagnitude","calculateMultiplier","shake","tick","arguments","length","undefined","magnitude","update","delta","followingCenter","getCenter","cameraCenter","getHeight","getWidth","diffX","diffY","abs","newCenter","speed","x1","y1","x2","y2","y","x","sqrt","getDistance","move","dim","setPositionCenter","updateAspectRatio","maintainHeight","viewport","getViewport","height","newWidth","setPositionCenterAndSize","width","newHeight","scaleSize","scalar","centerX","centerY","cameraMax","setSize","center","transformX","transformY","transformCoordinates","transform","transformRect","w","h","Controller","controlling","player","onGround","inputManager","isKeyDown","crouch","left","right","animation","disableController","facing","running","crouchValue","ledgeHang","slide","animationName","idle","setCrouch","isKeyPressed","jump","isMousePressed","attack","groundSlam","knockback","showInfo","camera","levelWidth","map","rows","i","convertIndexToCoordinates","push","newMap","collisionMap","createCollisionMap","GameObject","velocityX","velocityY","colliding","delete","setVelocity","setLeft","getLeft","setRight","getRight","setTop","top","getTop","setBottom","bottom","getBottom","isNegative","amount","force","tiles","Set","_x","_y","_index","convertCoordinatesToIndex","add","setX","setGroundY","groundY","horizontalCollide","horizontalFlag","position","Array","from","index","block","collidesWith","side","calculateOverlap","flag","setAnimation","other","overrideThis","rect1","rect2","r1","r2","dx","dy","crossWidth","crossHeight","collision","Entity","super","direction","shootCooldown","shootInterval","render","drawRect","shootAtPlayer","particleSystem","spawnParticles","playerX","playerY","entityX","entityY","distance","directionX","directionY","spawnBullet","InputManager","keyboard","Object","create","keypress","mouse","mousePress","mousePos","mouseMoved","events","addEventListener","eventName","cb","window","start","e","handleKeyEvent","key","handleMouseEvent","button","pageX","pageY","end","forEach","event","removeEventListener","getMousePosition","mouseToButton","str","parseInt","isMouseMove","char","keyCode","toString","toLowerCase","output","isMouseDown","state","ParticleSystem","particles","sizeScale","realAmount","angle","PI","cos","sin","size","ticks","vx","vy","alpha","particle","ctx","globalAlpha","deleting","unshift","splice","Animation","_ref","sprite","frames","after","xOffset","yOffset","timeout","Player","defaultSize","gravityTick","doubleJumped","frictionValue","lastLandY","animations","look_up","run","fall","land","slide_transition","roll","attack1","attack2","attack3","attack4","ground_slam","ground_slam_transition","ledge_climb","ledge_hang","wall_jump","crawl","value","fixSize","Error","oldAnimation","animationTick","setTimeout","done","frame","drawSprite","effects","isArray","wasOnGround","includes","levelHeight","Render","setAlpha","drawLine","strokeWidth","color","strokeStyle","beginPath","moveTo","lineTo","lineWidth","stroke","closePath","fillStyle","fillRect","drawCircle","r","arc","fill","spriteInfo","ssm","getSpriteFromInfoObject","drawScalingSprite","aspectRatio","passedAspectRatio","toFixed","JSON","stringify","drawImage","spriteSheet","image","img","sx","sy","sw","sh","round","drawImageWithRotation","_w","_h","rotateDegrees","context","angleInRadians","translate","rotate","drawText","text","fontSize","font","fillText","drawScalingText","ImageEffects","canvas","document","createElement","getContext","async","firstImage","images","Map","clonedSprites","spriteName","sprites","clonedSprite","Sprite","has","get","set","topLevel","SpriteSheet","applyEffectsToImage","type","keys","newImage","newSpriteSheet","currentImage","effect","applyEffectToImage","Promise","resolve","reject","effectName","name","clearRect","flipHorizontally","teamColor","payload","outputImage","Image","dataURL","toDataURL","src","onload","loaded","join","globalCompositeOperation","scale","setTransform","imgPath","info","spriteSheetManager","isTopLevel","SpriteSheetManager","effectsCache","creating","process","console","log","incrementLoaded","border","imageWidth","imageHeight","prefix","split","newImageSRC","childSprite","indirect","getSprite","getEffects","imageEffects","applyEffectsToSpriteSheet","spriteSheets","assetsLoaded","assetsTotal","hasLoaded","onLoaded","addSpriteSheet","ss","getSpriteSheet","spriteSheetName","path","Coin","rotation","bobOffset","collected","collectTimer","bobY","addScore","Bullet","lifeTime","age","save","restore","playerDie","FinishLine","animationTime","hue","concat","gameWin","Game","controller","entities","level","flat","spawnTick","fpsTick","fps","score","highScore","localStorage","getItem","gameState","finishLine","spawnCoin","seedCoins","spawnEntity","id","v4","entity","coinX","coinY","tileX","tileY","idx","coin","bullet","points","setItem","restart","renderGame","entityUUID","collisionFlag","tileKeys","tile","renderUI","textAlign","isSolid","placed","updateGame","deleteUUIDs","SpriteSheets","player_idle","player_run","player_jump","player_land","player_slide","player_roll","player_combat_combo_01_attack_01","player_combat_combo_01_attack_02","player_combat_combo_01_attack_03","player_combat_combo_01_attack_04","player_combat_ground_slam","player_look_up","player_knockback","player_ledge_climb","player_ledge_hang","player_wall_jump","player_wall_slide","player_crouch","player_crawl","player_front_flip","App","canvasRef","useRef","menu","setMenu","useState","gameRef","useEffect","data","current","last","performance","now","innerWidth","innerHeight","style","active","cancelAnimationFrame","requestAnimationFrame","_jsxs","className","children","_jsx","onClick","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.119ffae6.chunk.js","sourcesContent":["export function getRandom(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function getRandomInteger(min, max) {\r\n  return Math.floor(getRandom(min, max));\r\n}\r\n","import Game from \"./Game\";\r\nimport { getRandom } from \"./random\";\r\nimport { getDistance } from \"./util/MathUtil\";\r\n\r\nexport default class Camera {\r\n  /**\r\n   *\r\n   * @param {Game} game\r\n   */\r\n  constructor(game) {\r\n    this.game = game;\r\n    this.startX = 0;\r\n    this.startY = 0;\r\n    this.endX = 16;\r\n    this.endY = 11;\r\n\r\n    this.mut = [1, 1];\r\n    this.followingObject = null;\r\n    this.followSpeed = 2;\r\n    this.followX = true;\r\n    this.followY = true;\r\n\r\n    this.minX = null;\r\n    this.minY = null;\r\n\r\n    this.maxX = null;\r\n    this.maxY = null;\r\n\r\n    this.shakeTick = 0;\r\n    this.shakeMagnitude = 1;\r\n\r\n    this.calculateMultiplier();\r\n  }\r\n\r\n  shake(tick = 0.3, magnitude = 1) {\r\n    this.shakeTick = tick;\r\n    this.shakeMagnitude = magnitude;\r\n  }\r\n\r\n  update(delta) {\r\n    if (this.followingObject) {\r\n      var followingCenter = this.followingObject.getCenter();\r\n      var cameraCenter = this.getCenter();\r\n\r\n      if (typeof this.maxY === \"number\") {\r\n        followingCenter[1] = Math.min(\r\n          this.maxY - this.getHeight() / 2,\r\n          followingCenter[1]\r\n        );\r\n      }\r\n\r\n      if (typeof this.minX === \"number\") {\r\n        followingCenter[0] = Math.max(\r\n          this.minX + this.getWidth() / 2,\r\n          followingCenter[0]\r\n        );\r\n      }\r\n\r\n      var diffX = followingCenter[0] - cameraCenter[0];\r\n      var diffY = followingCenter[1] - cameraCenter[1];\r\n\r\n      if (Math.abs(diffX) > 0.01 || Math.abs(diffY) > 0.01) {\r\n        var newCenter = [cameraCenter[0], cameraCenter[1]];\r\n        var speed =\r\n          getDistance(\r\n            followingCenter[0],\r\n            followingCenter[1],\r\n            cameraCenter[0],\r\n            cameraCenter[1]\r\n          ) *\r\n          delta *\r\n          this.followSpeed;\r\n\r\n        function move(dim) {\r\n          if (newCenter[dim] < followingCenter[dim]) {\r\n            if (newCenter[dim] + speed < followingCenter[dim]) {\r\n              newCenter[dim] += speed;\r\n            } else {\r\n              newCenter[dim] = followingCenter[dim];\r\n            }\r\n          } else if (newCenter[dim] > followingCenter[dim]) {\r\n            if (newCenter[dim] - speed > followingCenter[dim]) {\r\n              newCenter[dim] -= speed;\r\n            } else {\r\n              newCenter[dim] = followingCenter[dim];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (Math.abs(diffX) > 0.1 && this.followX) {\r\n          move(0);\r\n        }\r\n\r\n        if (Math.abs(diffY) > 0.1 && this.followY) {\r\n          move(1);\r\n        }\r\n\r\n        if (this.shakeTick > 0) {\r\n          this.shakeTick -= delta;\r\n\r\n          newCenter[0] += (getRandom(-1, 1) / 100) * this.shakeMagnitude;\r\n          newCenter[1] += (getRandom(-1, 1) / 100) * this.shakeMagnitude;\r\n        }\r\n\r\n        this.setPositionCenter(newCenter[0], newCenter[1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateAspectRatio(maintainHeight = true) {\r\n    var viewport = this.game.getViewport();\r\n\r\n    if (maintainHeight) {\r\n      var height = this.getHeight();\r\n\r\n      var newWidth = height * (viewport[0] / viewport[1]);\r\n\r\n      this.setPositionCenterAndSize(...this.getCenter(), newWidth, height);\r\n    } else {\r\n      var width = this.getWidth();\r\n      var newHeight = width * (viewport[1] / viewport[0]);\r\n\r\n      this.setPositionCenterAndSize(...this.getCenter(), width, newHeight);\r\n    }\r\n  }\r\n\r\n  scaleSize(scalar = 1) {\r\n    this.setPositionCenterAndSize(\r\n      ...this.getCenter(),\r\n      this.getWidth() * scalar,\r\n      this.getHeight() * scalar\r\n    );\r\n  }\r\n\r\n  setPositionCenter(centerX, centerY) {\r\n    this.setPositionCenterAndSize(\r\n      centerX,\r\n      centerY,\r\n      this.endX - this.startX,\r\n      this.endY - this.startY\r\n    );\r\n  }\r\n\r\n  setPositionCenterAndSize(centerX, centerY, width, height) {\r\n    var cameraMax = [width, height];\r\n\r\n    this.startX = centerX - cameraMax[0] / 2;\r\n    this.startY = centerY - cameraMax[1] / 2;\r\n    this.endX = centerX + cameraMax[0] / 2;\r\n    this.endY = centerY + cameraMax[1] / 2;\r\n\r\n    this.calculateMultiplier();\r\n  }\r\n\r\n  setSize(width, height) {\r\n    var center = this.getCenter();\r\n\r\n    this.setPositionCenterAndSize(center[0], center[1], width, height);\r\n  }\r\n\r\n  getCenter() {\r\n    return [\r\n      this.startX + this.getWidth() / 2,\r\n      this.startY + this.getHeight() / 2,\r\n    ];\r\n  }\r\n\r\n  getWidth() {\r\n    return this.endX - this.startX;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.endY - this.startY;\r\n  }\r\n\r\n  calculateMultiplier() {\r\n    var viewport = this.game.getViewport();\r\n    this.mut = [viewport[0] / this.getWidth(), viewport[1] / this.getHeight()];\r\n  }\r\n\r\n  transformX(x) {\r\n    return x * this.mut[0];\r\n  }\r\n\r\n  transformY(y) {\r\n    return y * this.mut[1];\r\n  }\r\n\r\n  transformCoordinates(x, y) {\r\n    var transform = [x - this.startX, y - this.startY];\r\n    transform[0] *= this.mut[0];\r\n    transform[1] *= this.mut[1];\r\n    return transform;\r\n  }\r\n\r\n  transformRect(x, y, w, h) {\r\n    return [\r\n      ...this.transformCoordinates(x, y),\r\n      this.transformX(w),\r\n      this.transformY(h),\r\n    ];\r\n  }\r\n}\r\n","export function getDistance(x1, y1, x2, y2) {\r\n  let y = x2 - x1;\r\n  let x = y2 - y1;\r\n\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\nexport function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function radiansToDegree(radians) {\r\n  return radians * (180 / Math.PI);\r\n}\r\n","import Game from \"./Game\";\r\n\r\nexport default class Controller {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    this.controlling = this.game.player;\r\n  }\r\n\r\n  update(delta) {\r\n    var speed = (this.controlling.onGround ? 6 : 5.5) * delta;\r\n\r\n    if (this.game.inputManager.isKeyDown(\"shift\")) {\r\n      speed /= 5;\r\n    }\r\n\r\n    if (this.controlling.crouch) {\r\n      speed /= 5;\r\n    }\r\n\r\n    var left =\r\n      this.game.inputManager.isKeyDown(\"a\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowLeft\");\r\n\r\n    var right =\r\n      this.game.inputManager.isKeyDown(\"d\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowRight\");\r\n\r\n    var move = left ^ right && !this.controlling.animation.disableController;\r\n\r\n    if (move) {\r\n      if (left) {\r\n        this.controlling.x -= speed;\r\n        this.controlling.facing = 0;\r\n      }\r\n\r\n      if (right) {\r\n        this.controlling.x += speed;\r\n        this.controlling.facing = 1;\r\n      }\r\n\r\n      if (!this.controlling.running) {\r\n        this.controlling.running = true;\r\n      }\r\n    } else {\r\n      if (this.controlling.running) {\r\n        this.controlling.running = false;\r\n      }\r\n    }\r\n\r\n    var crouchValue = false;\r\n\r\n    if (\r\n      this.game.inputManager.isKeyDown(\"s\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowDown\")\r\n    ) {\r\n      if (this.controlling.ledgeHang) {\r\n        this.controlling.y += delta;\r\n      } else {\r\n        if (this.controlling.onGround) {\r\n          if (move) {\r\n            if (this.controlling.crouch) {\r\n              crouchValue = true;\r\n            } else {\r\n              this.controlling.slide();\r\n            }\r\n          } else {\r\n            crouchValue =\r\n              this.controlling.animationName === \"crouch\" ||\r\n              this.controlling.animationName === \"crawl\" ||\r\n              this.controlling.animation.idle;\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n\r\n    this.controlling.setCrouch(crouchValue);\r\n\r\n    if (\r\n      this.game.inputManager.isKeyPressed(\"w\") ||\r\n      this.game.inputManager.isKeyPressed(\" \") ||\r\n      this.game.inputManager.isKeyPressed(\"ArrowUp\")\r\n    ) {\r\n      if (!this.controlling.animation.disableController) {\r\n        this.controlling.jump();\r\n      }\r\n    }\r\n\r\n    if (!this.controlling.animation.disableController) {\r\n      if (this.game.inputManager.isMousePressed(\"0\")) {\r\n        if (this.controlling.onGround) {\r\n          this.controlling.attack();\r\n        } else {\r\n          this.controlling.groundSlam();\r\n        }\r\n      }\r\n\r\n      if (this.game.inputManager.isKeyPressed(\"f\")) {\r\n        this.controlling.knockback();\r\n      }\r\n\r\n      if (this.game.inputManager.isKeyPressed(\"g\")) {\r\n        this.game.showInfo = !this.game.showInfo;\r\n      }\r\n    }\r\n\r\n    if (this.game.inputManager.isKeyPressed(\"-\")) {\r\n      this.game.camera.scaleSize(1.1);\r\n    }\r\n    if (this.game.inputManager.isKeyPressed(\"=\")) {\r\n      this.game.camera.scaleSize(0.9);\r\n    }\r\n\r\n    if (this.controlling.x > this.game.levelWidth / 5) {\r\n      var map = this.game.map;\r\n      var rows = [];\r\n\r\n      for (var i = 0; i < map.length; i++) {\r\n        var [x, y] = this.game.convertIndexToCoordinates(i);\r\n        var row = rows[y] || (rows[y] = []);\r\n\r\n        row.push(map[i]);\r\n      }\r\n\r\n      var newMap = [];\r\n\r\n      for (var i = 0; i < rows.length; i++) {\r\n        newMap.push(...rows[i], ...rows[i]);\r\n      }\r\n\r\n      this.game.map = newMap;\r\n      this.game.levelWidth *= 2;\r\n\r\n      this.game.collisionMap = this.game.createCollisionMap();\r\n    }\r\n  }\r\n}\r\n","import Game from \"./Game\";\r\n\r\nexport default class GameObject {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.w = 0;\r\n    this.h = 0;\r\n\r\n    this.velocityX = 0;\r\n    this.velocityY = 0;\r\n\r\n    this.colliding = false;\r\n    this.delete = false;\r\n  }\r\n\r\n  setVelocity(velocityX, velocityY) {\r\n    this.velocityX = velocityX;\r\n    this.velocityY = velocityY;\r\n  }\r\n\r\n  setLeft(left) {\r\n    this.x = left;\r\n  }\r\n\r\n  getLeft() {\r\n    return this.x;\r\n  }\r\n\r\n  setRight(right) {\r\n    this.x = right - this.w;\r\n  }\r\n\r\n  getRight() {\r\n    return this.x + this.w;\r\n  }\r\n\r\n  setTop(top) {\r\n    this.y = top;\r\n  }\r\n\r\n  getTop() {\r\n    return this.y;\r\n  }\r\n\r\n  setBottom(bottom) {\r\n    this.y = bottom - this.h;\r\n  }\r\n\r\n  getBottom() {\r\n    return this.y + this.h;\r\n  }\r\n\r\n  getCenter() {\r\n    return [this.x + this.w / 2, this.y + this.h / 2];\r\n  }\r\n\r\n  update(delta) {\r\n    // compute velocity\r\n    if (this.velocityX) {\r\n      var isNegative = this.velocityX < 0;\r\n      var abs = Math.abs(this.velocityX);\r\n\r\n      var amount = Math.max(abs * 4 * delta, delta / 2);\r\n      if (amount > abs) {\r\n        amount = abs;\r\n      }\r\n\r\n      abs -= amount;\r\n      if (abs < 0) {\r\n        abs = 0;\r\n      }\r\n\r\n      this.velocityX = isNegative ? -abs : abs;\r\n      var force = isNegative ? -amount : amount;\r\n\r\n      this.x += force;\r\n    }\r\n\r\n    if (this.velocityY) {\r\n      var isNegative = this.velocityY < 0;\r\n      var abs = Math.abs(this.velocityY);\r\n\r\n      var amount = Math.max(abs * 4 * delta, delta / 2);\r\n      if (amount > abs) {\r\n        amount = abs;\r\n      }\r\n\r\n      abs -= amount;\r\n      if (abs < 0) {\r\n        abs = 0;\r\n      }\r\n\r\n      this.velocityY = isNegative ? -abs : abs;\r\n      var force = isNegative ? -amount : amount;\r\n\r\n      this.y += force;\r\n    }\r\n\r\n    this.tiles = {};\r\n\r\n    this.onGround = false;\r\n    this.colliding = false;\r\n\r\n    var colliding = new Set();\r\n\r\n    for (\r\n      var x = Math.floor(this.x) - 1;\r\n      x <= Math.floor(this.x + this.w) + 1;\r\n      x += 0.4\r\n    ) {\r\n      for (\r\n        var y = Math.floor(this.y) - 1;\r\n        y <= Math.floor(this.y + this.h) + 1;\r\n        y += 0.4\r\n      ) {\r\n        var _x = Math.floor(x);\r\n        var _y = Math.floor(y);\r\n\r\n        var _index = this.game.convertCoordinatesToIndex(_x, _y);\r\n\r\n        if (this.game.collisionMap[_index]) {\r\n          colliding.add(_index);\r\n        }\r\n      }\r\n    }\r\n\r\n    var setX = null;\r\n    var setGroundY = 0;\r\n    var groundY = 0;\r\n    var horizontalCollide = null;\r\n    var horizontalFlag = false;\r\n\r\n    for (var position of Array.from(colliding)) {\r\n      var index = position;\r\n      var [x, y] = this.game.convertIndexToCoordinates(index);\r\n\r\n      var block = {\r\n        x,\r\n        y,\r\n        w: 1,\r\n        h: 1,\r\n      };\r\n\r\n      if (this.collidesWith(block)) {\r\n        var side = this.calculateOverlap(block);\r\n        if (side === \"top\") {\r\n          if (\r\n            !this.crouch &&\r\n            this.calculateOverlap(block, {\r\n              x: this.x,\r\n              y: this.getBottom() - 0.1,\r\n              w: this.w,\r\n              h: 0.1,\r\n            }) !== \"top\"\r\n          ) {\r\n            side = this.x < block.x ? \"left\" : \"right\";\r\n          }\r\n        }\r\n        var flag = {\r\n          left: 1,\r\n          right: 2,\r\n          top: 4,\r\n          bottom: 8,\r\n        }[side];\r\n\r\n        if (this.game.collisionMap[index] & flag) {\r\n          this.colliding = true;\r\n\r\n          if (side === \"top\") {\r\n            this.onGround = true;\r\n            groundY = y;\r\n            if (this.getBottom() > y) {\r\n              this.setBottom(y + 0.01);\r\n            }\r\n          } else if (side === \"bottom\") {\r\n            if (this.getTop() < y + 1) {\r\n              this.setTop(y + 1);\r\n            }\r\n          } else if (side === \"left\") {\r\n            setX = x - this.w;\r\n            setGroundY = y;\r\n            horizontalCollide = block;\r\n            horizontalFlag = this.facing === 1;\r\n          } else if (side === \"right\") {\r\n            setX = x + block.w;\r\n            setGroundY = y;\r\n            horizontalCollide = block;\r\n            horizontalFlag = this.facing === 0;\r\n          }\r\n\r\n          this.tiles[index] = flag;\r\n        }\r\n\r\n        // console.log(this, block);\r\n      }\r\n    }\r\n\r\n    if (typeof setX === \"number\" && groundY !== setGroundY) {\r\n      this.x = setX;\r\n\r\n      if (\r\n        !this.onGround &&\r\n        this.animationName !== \"crawl\" &&\r\n        this.animationName !== \"roll\" &&\r\n        horizontalFlag &&\r\n        this.game.collisionMap[\r\n          this.game.convertCoordinatesToIndex(\r\n            horizontalCollide.x,\r\n            horizontalCollide.y - 1\r\n          )\r\n        ] &&\r\n        (this.y - Math.floor(this.y) < 0.3 ||\r\n          this.game.collisionMap[\r\n            this.game.convertCoordinatesToIndex(\r\n              horizontalCollide.x,\r\n              horizontalCollide.y + 1\r\n            )\r\n          ])\r\n      ) {\r\n        this.ledgeHang = true;\r\n\r\n        if (\r\n          this.animationName !== \"ledge_hang\" &&\r\n          this.animationName !== \"wall_jump\"\r\n        ) {\r\n          this.setAnimation(\"ledge_hang\");\r\n        }\r\n      }\r\n    } else {\r\n      if (this.ledgeHang) {\r\n        this.ledgeHang = false;\r\n        this.setAnimation(\"fall\");\r\n      }\r\n    }\r\n  }\r\n\r\n  collidesWith(other, overrideThis) {\r\n    var rect1 = overrideThis || this;\r\n    var rect2 = other;\r\n\r\n    return (\r\n      rect1.x < rect2.x + rect2.w &&\r\n      rect1.x + rect1.w > rect2.x &&\r\n      rect1.y < rect2.y + rect2.h &&\r\n      rect1.h + rect1.y > rect2.y\r\n    );\r\n  }\r\n\r\n  calculateOverlap(other, overrideThis) {\r\n    var r1 = overrideThis || this;\r\n    var r2 = other;\r\n\r\n    var dx = r1.x + r1.w / 2 - (r2.x + r2.w / 2);\r\n    var dy = r1.y + r1.h / 2 - (r2.y + r2.h / 2);\r\n    var width = (r1.w + r2.w) / 2;\r\n    var height = (r1.h + r2.h) / 2;\r\n    var crossWidth = width * dy;\r\n    var crossHeight = height * dx;\r\n    var collision = \"none\";\r\n    //\r\n    if (Math.abs(dx) <= width && Math.abs(dy) <= height) {\r\n      if (crossWidth > crossHeight) {\r\n        collision = crossWidth > -crossHeight ? \"bottom\" : \"left\";\r\n      } else {\r\n        collision = crossWidth > -crossHeight ? \"right\" : \"top\";\r\n      }\r\n    }\r\n    return collision;\r\n  }\r\n}\r\n","import GameObject from \"./GameObject\";\r\n\r\nexport default class Entity extends GameObject {\r\n  constructor(game) {\r\n    super(game);\r\n\r\n    this.w = 0.1;\r\n    this.h = 0.1;\r\n\r\n    this.direction = -1;\r\n    this.shootCooldown = 0;\r\n    this.shootInterval = 2.5; // Shoot every ~2.5s\r\n  }\r\n\r\n  render() {\r\n    this.game.render.drawRect(this.x, this.y, this.w, this.h, \"#ff2222\");\r\n  }\r\n\r\n  update(delta) {\r\n    this.x += delta * this.direction * 3;\r\n\r\n    super.update();\r\n\r\n    // Update shoot cooldown\r\n    this.shootCooldown += delta;\r\n\r\n    // Shoot at player if cooldown is ready\r\n    if (this.shootCooldown >= this.shootInterval) {\r\n      this.shootCooldown = 0;\r\n      this.shootAtPlayer();\r\n    }\r\n\r\n    if (this.collidesWith(this.game.player)) {\r\n      if (this.game.player.animationName === \"attack1\") {\r\n        this.direction = this.game.player.facing === 0 ? -1 : 1;\r\n\r\n        this.game.particleSystem.spawnParticles(this.x, this.y, 6, 0.5);\r\n\r\n        this.game.camera.shake();\r\n      } else if (this.game.player.animationName === \"ground_slam\") {\r\n        this.colliding = true;\r\n        this.game.camera.shake();\r\n      } else {\r\n        this.game.player.facing = this.direction < 0 ? 1 : 0;\r\n\r\n        this.game.player.knockback();\r\n        this.colliding = true;\r\n      }\r\n    }\r\n\r\n    if (this.colliding) {\r\n      this.delete = true;\r\n\r\n      this.game.particleSystem.spawnParticles(this.x, this.y, 5, 0.3);\r\n    }\r\n  }\r\n\r\n  shootAtPlayer() {\r\n    // Calculate direction to player\r\n    const playerX = this.game.player.x + this.game.player.w / 2;\r\n    const playerY = this.game.player.y + this.game.player.h / 2;\r\n    const entityX = this.x + this.w / 2;\r\n    const entityY = this.y + this.h / 2;\r\n    \r\n    const dx = playerX - entityX;\r\n    const dy = playerY - entityY;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    \r\n    if (distance > 0) {\r\n      const directionX = dx / distance;\r\n      const directionY = dy / distance;\r\n      this.game.spawnBullet(entityX, entityY, directionX, directionY);\r\n    }\r\n  }\r\n}\r\n","export default class InputManager {\r\n  constructor() {\r\n    this.keyboard = Object.create(null);\r\n    this.keypress = Object.create(null);\r\n    this.mouse = Object.create(null);\r\n    this.mousePress = Object.create(null);\r\n\r\n    this.mousePos = [];\r\n    this.mouseMoved = true;\r\n    this.events = [];\r\n  }\r\n\r\n  addEventListener(eventName, cb) {\r\n    window.addEventListener(eventName, cb);\r\n    this.events.push([eventName, cb]);\r\n  }\r\n\r\n  start() {\r\n    this.addEventListener(\"keydown\", (e) => {\r\n      this.handleKeyEvent(e.key, true);\r\n    });\r\n\r\n    this.addEventListener(\"keyup\", (e) => {\r\n      this.handleKeyEvent(e.key, false);\r\n    });\r\n\r\n    this.addEventListener(\"mousedown\", (e) => {\r\n      this.handleMouseEvent(e.button, true);\r\n    });\r\n\r\n    this.addEventListener(\"mouseup\", (e) => {\r\n      this.handleMouseEvent(e.button, false);\r\n    });\r\n\r\n    this.addEventListener(\"mousemove\", (e) => {\r\n      this.mousePos = [e.pageX, e.pageY];\r\n      this.mouseMoved = true;\r\n    });\r\n  }\r\n\r\n  end() {\r\n    this.events.forEach((event) => {\r\n      window.removeEventListener(event[0], event[1]);\r\n    });\r\n\r\n    this.events = [];\r\n  }\r\n\r\n  getMousePosition() {\r\n    return this.mousePos;\r\n  }\r\n\r\n  mouseToButton(str) {\r\n    if (str === \"left\") {\r\n      return 0;\r\n    }\r\n    if (str === \"right\") {\r\n      return 2;\r\n    }\r\n\r\n    return parseInt(str);\r\n  }\r\n\r\n  isMouseMove() {\r\n    if (this.mouseMoved) {\r\n      this.mouseMoved = false;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isKeyDown(char) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    return !!this.keyboard[keyCode];\r\n  }\r\n\r\n  isKeyPressed(char) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    var output = this.keypress[keyCode];\r\n    if (output) {\r\n      this.keypress[keyCode] = false;\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  isMouseDown(str) {\r\n    return this.mouse[this.mouseToButton(str)];\r\n  }\r\n\r\n  isMousePressed(str) {\r\n    var button = this.mouseToButton(str);\r\n\r\n    var output = this.mousePress[button];\r\n    if (output) {\r\n      this.mousePress[button] = false;\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  handleKeyEvent(char, state) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    if (state && this.keyboard[keyCode]) {\r\n      return;\r\n    }\r\n    this.keyboard[keyCode] = state;\r\n    this.keypress[keyCode] = state;\r\n  }\r\n\r\n  handleMouseEvent(button, state) {\r\n    this.mouse[button] = state;\r\n    this.mousePress[button] = state;\r\n  }\r\n}\r\n","import Game from \"./Game\";\r\nimport { getRandom, getRandomInteger } from \"./random\";\r\n\r\nexport default class ParticleSystem {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    /**\r\n     * @type {Array.<{ x: number, y: number, size: number, ticks: number, vx: number, vy: number, alpha: number }>}\r\n     */\r\n    this.particles = [];\r\n  }\r\n\r\n  spawnParticles(x, y, amount = 5, sizeScale = 1) {\r\n    var realAmount =\r\n      amount === 1 ? amount : getRandomInteger(amount * 0.9, amount * 1.1);\r\n\r\n    for (var i = 0; i < realAmount; i++) {\r\n      var angle = getRandom(0, Math.PI * 2);\r\n      var speed = getRandom(0.1, 6) / 100;\r\n\r\n      var dx = (Math.cos(angle) * getRandom(3, 5)) / 100;\r\n      var dy = (Math.sin(angle) * getRandom(3, 5)) / 100;\r\n\r\n      this.particles.push({\r\n        x: x + dx,\r\n        y: y + dy,\r\n        size: getRandom(3, 6 * sizeScale) / 100,\r\n        ticks: getRandom(0, 1),\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        alpha: getRandom(0, 0.1),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    for (var particle of this.particles) {\r\n      this.game.ctx.globalAlpha = Math.min(1, Math.max(0, particle.alpha));\r\n\r\n      this.game.render.drawRect(\r\n        particle.x,\r\n        particle.y,\r\n        Math.max(0, particle.size),\r\n        Math.max(0, particle.size),\r\n        \"#fff\"\r\n      );\r\n    }\r\n\r\n    this.game.ctx.globalAlpha = 1;\r\n  }\r\n\r\n  update(delta) {\r\n    var deleting = [];\r\n\r\n    for (var i = 0; i < this.particles.length; i++) {\r\n      var particle = this.particles[i];\r\n\r\n      particle.x += delta * particle.vx;\r\n      particle.y += delta * particle.vy;\r\n\r\n      particle.ticks += delta;\r\n\r\n      if (particle.ticks > 2) {\r\n        particle.size -= delta / 200;\r\n        particle.alpha -= delta / 2;\r\n\r\n        if (particle.size < 0.0001 || particle.alpha < 0.0001) {\r\n          deleting.unshift(i);\r\n        }\r\n      } else if (particle.alpha < 1) {\r\n        particle.alpha += delta * 3;\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < deleting.length; i++) {\r\n      this.particles.splice(deleting[i], 1);\r\n    }\r\n  }\r\n}\r\n","export default class Animation {\r\n  constructor({\r\n    sprite,\r\n    frames,\r\n    speed,\r\n    after,\r\n    xOffset,\r\n    yOffset,\r\n    disableController,\r\n    idle,\r\n    size,\r\n    timeout,\r\n  }) {\r\n    this.sprite = sprite;\r\n    this.frames = frames;\r\n    this.speed = speed;\r\n\r\n    this.after = after;\r\n\r\n    this.disableController = !!disableController;\r\n\r\n    this.xOffset = xOffset || 0;\r\n    this.yOffset = yOffset || 0;\r\n\r\n    this.idle = !!idle;\r\n    this.size = size;\r\n\r\n    this.timeout = timeout;\r\n  }\r\n}\r\n","import Animation from \"./Animation\";\r\nimport Game from \"./Game\";\r\nimport GameObject from \"./GameObject\";\r\nimport { getDistance } from \"./math\";\r\nimport { getRandomInteger } from \"./random\";\r\nimport { radiansToDegree } from \"./util/MathUtil\";\r\n\r\nexport default class Player extends GameObject {\r\n  constructor(game) {\r\n    super(game);\r\n    this.x = 5;\r\n    this.y = 5;\r\n\r\n    this.w = 0.55;\r\n    this.h = 0.95;\r\n    this.defaultSize = [this.w, this.h];\r\n\r\n    this.onGround = false;\r\n    this.running = false;\r\n    this.gravityTick = 0;\r\n\r\n    this.ledgeHang = false;\r\n\r\n    this.doubleJumped = false;\r\n    this.frictionValue = 0;\r\n    /**\r\n     * - `0` = Left\r\n     * - `1` = Right\r\n     */\r\n    this.facing = 0;\r\n\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    this.tiles = {};\r\n\r\n    this.lastLandY = 0;\r\n\r\n    this.animations = {\r\n      idle: new Animation({\r\n        sprite: \"player_idle\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6],\r\n        speed: 140,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      look_up: new Animation({\r\n        sprite: \"player_look_up\",\r\n        frames: [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0],\r\n        speed: 200,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      run: new Animation({\r\n        sprite: \"player_run\",\r\n        frames: [0, 1, 2, 3, 4, 5, 7],\r\n        speed: 120,\r\n      }),\r\n      jump: new Animation({\r\n        sprite: \"player_jump\",\r\n        frames: [0],\r\n        speed: 110,\r\n        after: \"fall\",\r\n      }),\r\n      fall: new Animation({\r\n        sprite: \"player_jump\",\r\n        frames: [1, 2],\r\n        speed: 250,\r\n        after: \"fall\",\r\n      }),\r\n      land: new Animation({\r\n        sprite: \"player_land\",\r\n        frames: [0, 1],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      slide: new Animation({\r\n        sprite: \"player_slide\",\r\n        frames: [0, 1, 2],\r\n        speed: 90,\r\n        after: \"slide_transition\",\r\n        disableController: false,\r\n        size: [1, 0.6],\r\n        yOffset: -0.4,\r\n        xOffset: [0.3, 0.2],\r\n        timeout: false\r\n      }),\r\n      slide_transition: new Animation({\r\n        sprite: \"player_slide\",\r\n        frames: [3],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      roll: new Animation({\r\n        sprite: \"player_front_flip\",\r\n        frames: [5, 6, 7, 8, 9, 10, 11, 12],\r\n        speed: 60,\r\n        after: \"fall\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.15,\r\n      }),\r\n      attack1: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_01\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack2: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_02\",\r\n        frames: [0, 1, 2, 3, 4],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack3: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_03\",\r\n        frames: [0, 1, 2, 3],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack4: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_04\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7, 8],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      ground_slam: new Animation({\r\n        sprite: \"player_combat_ground_slam\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6],\r\n        speed: 100,\r\n        after: \"ground_slam_transition\",\r\n        disableController: true,\r\n      }),\r\n      ground_slam_transition: new Animation({\r\n        sprite: \"player_combat_ground_slam\",\r\n        frames: [7, 8, 9],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      knockback: new Animation({\r\n        sprite: \"player_knockback\",\r\n        frames: [0, 1, 2, 4, 4, 4, 4, 4, 4, 4, 5],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      ledge_climb: new Animation({\r\n        sprite: \"player_ledge_climb\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7],\r\n        speed: 100,\r\n        after: \"ledge_climb\",\r\n        xOffset: [0.3, -0.3],\r\n        yOffset: 0.9,\r\n      }),\r\n      ledge_hang: new Animation({\r\n        sprite: \"player_ledge_hang\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"ledge_hang\",\r\n        xOffset: [-0.1, 0.11],\r\n      }),\r\n      wall_jump: new Animation({\r\n        sprite: \"player_wall_jump\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n        speed: 100,\r\n        after: \"fall\",\r\n      }),\r\n      crouch: new Animation({\r\n        sprite: \"player_crouch\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"crouch\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.4,\r\n      }),\r\n      crawl: new Animation({\r\n        sprite: \"player_crawl\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7],\r\n        speed: 120,\r\n        after: \"crawl\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.4,\r\n      }),\r\n    };\r\n\r\n    /**\r\n     * @type {Animation}\r\n     */\r\n    this.animation = null;\r\n    this.animationName = \"\";\r\n\r\n    this.setAnimation(\"idle\");\r\n    this.crouch = false;\r\n  }\r\n\r\n  setCrouch(value) {\r\n    if (!this.crouch && value) {\r\n      this.setAnimation(\"crouch\");\r\n      this.crouch = true;\r\n    } else if (this.crouch && !value) {\r\n      this.crouch = false;\r\n\r\n      this.setAnimation(\"idle\");\r\n    }\r\n  }\r\n\r\n  setAnimation(animationName, fixSize = true) {\r\n    if (!this.animations[animationName]) {\r\n      throw new Error(\"Invalid animation: \" + animationName);\r\n    }\r\n\r\n    if (animationName !== \"crouch\" && animationName !== \"crawl\") {\r\n      this.setCrouch(false);\r\n    }\r\n    var oldAnimation = this.animation;\r\n\r\n    this.animation = this.animations[animationName];\r\n    this.animationName = animationName;\r\n    this.animationTick = 0;\r\n\r\n    if (this.animation.size) {\r\n      this.w = this.animation.size[0];\r\n      this.h = this.animation.size[1];\r\n\r\n      this.x += (this.defaultSize[0] - this.animation.size[0]) / 2;\r\n      this.y += this.defaultSize[1] - this.animation.size[1];\r\n    } else {\r\n      [this.w, this.h] = this.defaultSize;\r\n\r\n      if (fixSize) {\r\n        if (oldAnimation && oldAnimation.size) {\r\n          this.x -= (this.w - oldAnimation.size[0]) / 2;\r\n          this.y -= this.h - oldAnimation.size[1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  attack() {\r\n    this.game.camera.shake(0.15, 0.8);\r\n\r\n    this.setAnimation(\"attack1\");\r\n  }\r\n\r\n  groundSlam() {\r\n    this.setAnimation(\"ground_slam\");\r\n  }\r\n\r\n  jump() {\r\n    if (this.doubleJumped && !this.ledgeHang) {\r\n      return\r\n    }\r\n    this.gravityTick = 0;\r\n    this.velocityX = 0;\r\n\r\n    this.lastLandY = null;\r\n\r\n    this.game.particleSystem.spawnParticles(\r\n      this.getCenter()[0],\r\n      this.getBottom() - 0.1,\r\n      4,\r\n      0.3\r\n    );\r\n\r\n    if (!this.onGround) {\r\n      this.setAnimation(\"roll\");\r\n      this.ledgeHang = false;\r\n      this.doubleJumped = true;\r\n\r\n      this.velocityY = -4.85;\r\n    } else {\r\n      this.setAnimation(\"jump\");\r\n      this.velocityY = -5;\r\n    }\r\n  }\r\n\r\n  slide() {\r\n    if (this.animations.slide.timeout) {\r\n      //prevent double sliding\r\n      return\r\n    }\r\n    this.animations.slide.timeout = true;\r\n    setTimeout(() => {\r\n      this.animations.slide.timeout = false;\r\n    }, 1500)\r\n    this.setAnimation(\"slide\");\r\n  }\r\n\r\n  knockback() {\r\n    this.setAnimation(\"knockback\");\r\n    setTimeout(() => {\r\n      this.velocityX = 0.1 * (this.facing == 0 ? 1 : -1);\r\n    }, 100);\r\n  }\r\n\r\n  render(delta) {\r\n    // animator\r\n    this.animationTick += delta * 1000;\r\n\r\n    var index = Math.floor(this.animationTick / this.animation.speed);\r\n    var done = false;\r\n    if (index > this.animation.frames.length - 1) {\r\n      if (index > this.animation.frames.length) {\r\n        done = true;\r\n      }\r\n\r\n      index = this.animation.frames.length - 1;\r\n    }\r\n\r\n    var frame = this.animation.frames[index];\r\n\r\n    if (this.game.showInfo) {\r\n      this.game.render.drawRect(\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.onGround ? \"#444\" : \"#663333\"\r\n      );\r\n    }\r\n\r\n    var xOffset = 0;\r\n\r\n    var [w, h] = this.defaultSize;\r\n\r\n    this.game.render.drawSprite(\r\n      {\r\n        sprite: this.animation.sprite,\r\n        frame: frame,\r\n        effects: this.facing == 0 ? [\"flipHorizontally\"] : [],\r\n      },\r\n      this.x -\r\n        w * 1.55 +\r\n        (Array.isArray(this.animation.xOffset)\r\n          ? this.animation.xOffset[this.facing]\r\n          : this.animation.xOffset) +\r\n        xOffset,\r\n      this.y - h * 1.05 + this.animation.yOffset,\r\n      w * h * 4.3,\r\n      w * h * 4.3 * 0.875\r\n    );\r\n\r\n    if (done) {\r\n      if (this.animation.after) {\r\n        if (this.animationName === \"idle\" && Math.random() > 0.5) {\r\n          this.setAnimation(\"look_up\");\r\n        } else {\r\n          this.setAnimation(this.animation.after);\r\n        }\r\n      } else {\r\n        this.setAnimation(this.animationName);\r\n      }\r\n    }\r\n\r\n    // animation logic\r\n    if (this.running) {\r\n      if (this.animation.idle) {\r\n        this.setAnimation(\"run\");\r\n      }\r\n      if (this.animationName === \"crouch\") {\r\n        this.setAnimation(\"crawl\");\r\n      }\r\n    } else {\r\n      if (this.animationName === \"run\") {\r\n        this.setAnimation(\"idle\");\r\n      }\r\n      if (this.animationName === \"crawl\") {\r\n        this.setAnimation(\"crouch\");\r\n      }\r\n    }\r\n\r\n    if (!this.onGround) {\r\n      if (\r\n        this.animation.idle ||\r\n        (!this.ledgeHang && this.animationName === \"ledge_hang\")\r\n      ) {\r\n        this.setAnimation(\"fall\");\r\n      }\r\n    } else {\r\n      if (this.animationName === \"fall\") {\r\n        this.setAnimation(\"idle\");\r\n      }\r\n    }\r\n  }\r\n\r\n  update(delta) {\r\n    var wasOnGround = this.onGround;\r\n\r\n    super.update(delta);\r\n\r\n    if (!this.onGround && !this.ledgeHang) {\r\n      this.gravityTick += delta;\r\n      this.y += Math.min(this.gravityTick / 5, delta * 10);\r\n    } else {\r\n      this.gravityTick = 0;\r\n    }\r\n    if (!this.animationName.includes(\"slide\")) {\r\n      this.frictionValue = 0;\r\n    } else {\r\n      this.velocityX = Math.sqrt(-0.07 * this.frictionValue + 3) * (this.facing == 0 ? -1 : 1);\r\n      this.frictionValue++\r\n    }\r\n    if (this.onGround) {\r\n      //resetting movement checks\r\n      this.doubleJumped = false\r\n\r\n      if (!wasOnGround) {\r\n        var y = Math.floor(this.y);\r\n        if (y !== this.lastLandY) {\r\n          this.lastLandY = y;\r\n\r\n          this.game.particleSystem.spawnParticles(\r\n            this.getCenter()[0],\r\n            this.getBottom() - 0.1,\r\n            5,\r\n            0.3\r\n          );\r\n\r\n          if (this.velocityY < 0) {\r\n            this.velocityY = 0;\r\n          } else {\r\n          }\r\n          if (\r\n            this.animationName !== \"ground_slam\" &&\r\n            this.animationName !== \"knockback\"\r\n          ) {\r\n            this.setAnimation(\"land\", true);\r\n          } else {\r\n            this.game.camera.shake(0.1, 4);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // game boundaries\r\n    this.x = Math.max(0, Math.min(this.game.levelWidth - this.w, this.x));\r\n    this.y = Math.max(0, Math.min(this.game.levelHeight - this.h, this.y));\r\n  }\r\n}\r\n","import Game from \"./Game.js\";\r\nimport { degreesToRadians } from \"./util/MathUtil.js\";\r\n\r\nexport default class Render {\r\n  /**\r\n   * @param {Game} game\r\n   */\r\n  constructor(game) {\r\n    this.game = game;\r\n  }\r\n\r\n  setAlpha(alpha) {\r\n    this.game.ctx.globalAlpha = alpha;\r\n  }\r\n\r\n  drawLine(startX, startY, endX, endY, strokeWidth, color) {\r\n    this.game.ctx.strokeStyle = color;\r\n\r\n    this.game.ctx.beginPath();\r\n    this.game.ctx.moveTo(\r\n      ...this.game.camera.transformCoordinates(startX, startY)\r\n    );\r\n    this.game.ctx.lineTo(...this.game.camera.transformCoordinates(endX, endY));\r\n    this.game.ctx.lineWidth = this.game.camera.transformX(strokeWidth);\r\n\r\n    this.game.ctx.stroke();\r\n    this.game.ctx.closePath();\r\n  }\r\n\r\n  drawRect(x, y, w, h, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.fillRect(...this.game.camera.transformRect(x, y, w, h));\r\n  }\r\n\r\n  drawCircle(x, y, r, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.beginPath();\r\n    this.game.ctx.arc(\r\n      ...this.game.camera.transformCoordinates(x, y),\r\n      this.game.camera.transformX(r),\r\n      2 * Math.PI,\r\n      0\r\n    );\r\n    this.game.ctx.fill();\r\n    this.game.ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * @param {Object} spriteInfo\r\n   * @param {string} spriteInfo.sprite\r\n   * @param {number} spriteInfo.frame\r\n   * @param {string[]} spriteInfo.effects\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   */\r\n  drawSprite(spriteInfo, x, y, w, h) {\r\n    var sprite = this.game.ssm.getSpriteFromInfoObject(spriteInfo);\r\n\r\n    if (sprite) {\r\n      this.drawScalingSprite(spriteInfo, x, y, w, h);\r\n\r\n      var aspectRatio = sprite.h / sprite.w;\r\n      var passedAspectRatio = h / w;\r\n\r\n      if (aspectRatio.toFixed(2) !== passedAspectRatio.toFixed(2)) {\r\n        throw new Error(\r\n          \"Invalid aspect ratio while drawing \" +\r\n            JSON.stringify(spriteInfo) +\r\n            \", expected: \" +\r\n            aspectRatio +\r\n            \", received: \" +\r\n            passedAspectRatio\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  drawScalingSprite(spriteInfo, x, y, w, h) {\r\n    var sprite = this.game.ssm.getSpriteFromInfoObject(spriteInfo);\r\n\r\n    if (sprite) {\r\n      this.drawImage(\r\n        sprite.spriteSheet.image,\r\n        x,\r\n        y,\r\n        w,\r\n        h,\r\n        sprite.x,\r\n        sprite.y,\r\n        sprite.w,\r\n        sprite.h\r\n      );\r\n    }\r\n  }\r\n\r\n  drawImage(img, x, y, w, h, sx, sy, sw, sh) {\r\n    this.game.ctx.drawImage(\r\n      img,\r\n      sx,\r\n      sy,\r\n      sw,\r\n      sh,\r\n      ...this.game.camera.transformRect(x, y, w, h).map(Math.round)\r\n    );\r\n  }\r\n\r\n  drawImageWithRotation(image, _x, _y, _w, _h, sx, sy, sw, sh, rotateDegrees) {\r\n    var [x, y, width, height] = this.game.camera.transformRect(_x, _y, _w, _h);\r\n\r\n    x += width / 2;\r\n    y += height / 2;\r\n\r\n    var context = this.game.ctx;\r\n\r\n    var angleInRadians = degreesToRadians(rotateDegrees);\r\n\r\n    context.translate(x, y);\r\n    context.rotate(angleInRadians);\r\n    context.drawImage(\r\n      image,\r\n      sx,\r\n      sy,\r\n      sw,\r\n      sh,\r\n      -width / 2,\r\n      -height / 2,\r\n      width,\r\n      height\r\n    );\r\n    context.rotate(-angleInRadians);\r\n    context.translate(-x, -y);\r\n  }\r\n\r\n  drawText(text, x, y, fontSize, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.font = fontSize + \"px\";\r\n\r\n    this.game.ctx.fillText(\r\n      text,\r\n      ...this.game.camera.transformCoordinates(x, y)\r\n    );\r\n  }\r\n\r\n  drawScalingText(text, x, y, maxX, fontSize, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.font = fontSize + \"px\";\r\n\r\n    this.game.ctx.fillText(\r\n      text,\r\n      ...this.game.camera.transformCoordinates(x, y),\r\n      this.game.camera.transformX(maxX)\r\n    );\r\n  }\r\n}\r\n","import Sprite from \"./Sprite\";\r\nimport SpriteSheet from \"./SpriteSheet\";\r\n\r\nexport default class ImageEffects {\r\n  constructor() {\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  async applyEffectsToSpriteSheet(spriteSheet, effects) {\r\n    if (!effects.length) {\r\n      return spriteSheet;\r\n    }\r\n\r\n    var images = new Map();\r\n    var firstImage;\r\n    var clonedSprites = {};\r\n\r\n    for (var spriteName in spriteSheet.sprites) {\r\n      var sprite = spriteSheet.sprites[spriteName];\r\n      var image = sprite.spriteSheet.image;\r\n\r\n      var clonedSprite = new Sprite(sprite, sprite.spriteSheet);\r\n      clonedSprites[spriteName] = clonedSprite;\r\n\r\n      if (!firstImage) {\r\n        firstImage = image;\r\n      }\r\n\r\n      if (!images.has(image)) {\r\n        images.set(image, [clonedSprite]);\r\n      } else {\r\n        images.get(image).push(clonedSprite);\r\n      }\r\n    }\r\n\r\n    var topLevel = new SpriteSheet(\r\n      await this.applyEffectsToImage(firstImage, effects),\r\n      {\r\n        type: \"manual\",\r\n        sprites: {},\r\n      },\r\n      spriteSheet.ssm,\r\n      false\r\n    );\r\n\r\n    topLevel.sprites = clonedSprites;\r\n\r\n    for (var image of images.keys()) {\r\n      var sprites = images.get(image);\r\n\r\n      var newImage = await this.applyEffectsToImage(image, effects);\r\n      var newSpriteSheet = new SpriteSheet(\r\n        newImage,\r\n        {\r\n          type: \"manual\",\r\n          sprites: {},\r\n        },\r\n        spriteSheet.ssm,\r\n        false\r\n      );\r\n\r\n      newSpriteSheet.sprites = sprites;\r\n\r\n      for (var sprite of sprites) {\r\n        sprite.spriteSheet = newSpriteSheet;\r\n      }\r\n    }\r\n\r\n    return topLevel;\r\n  }\r\n\r\n  async applyEffectsToImage(image, effects) {\r\n    if (!effects.length) {\r\n      return image;\r\n    }\r\n\r\n    var currentImage = image;\r\n    for (var effect of effects) {\r\n      currentImage = await this.applyEffectToImage(currentImage, effect);\r\n    }\r\n\r\n    return currentImage;\r\n  }\r\n\r\n  async applyEffectToImage(image, effect) {\r\n    return new Promise((resolve, reject) => {\r\n      var effectName = typeof effect === \"string\" ? effect : effect.name;\r\n\r\n      // prepare canvas\r\n      this.canvas.width = image.width;\r\n      this.canvas.height = image.height;\r\n\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n      switch (effectName) {\r\n        case \"flipHorizontally\":\r\n          this.flipHorizontally(image);\r\n          break;\r\n\r\n        case \"teamColor\":\r\n          this.teamColor(image, effect.payload);\r\n          break;\r\n\r\n        default:\r\n          throw new Error(\"Invalid effect name \" + effectName);\r\n      }\r\n\r\n      let outputImage = new Image();\r\n\r\n      var dataURL = this.canvas.toDataURL(\"image/png\");\r\n\r\n      outputImage.src = dataURL;\r\n      outputImage.onload = () => {\r\n        outputImage.loaded = true;\r\n\r\n        resolve(outputImage);\r\n      };\r\n    });\r\n  }\r\n\r\n  teamColor(image, color = \"#ff2222\") {\r\n    var ctx = this.ctx,\r\n      canvas = this.canvas;\r\n\r\n    if (Array.isArray(color)) {\r\n      color = \"rgb(\" + color.join(\",\") + \")\";\r\n    }\r\n    /// ... var color = colors[index];\r\n\r\n    this.canvas.width = image.width;\r\n    this.canvas.height = image.height;\r\n\r\n    // First draw your image to the buffer\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    // Now we'll multiply a rectangle of your chosen color\r\n\r\n    ctx.globalCompositeOperation = \"darken\";\r\n\r\n    ctx.fillStyle = color;\r\n\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Finally, fix masking issues you'll probably incur and optional globalAlpha\r\n    ctx.globalAlpha = 1;\r\n    ctx.globalCompositeOperation = \"destination-in\";\r\n    ctx.drawImage(image, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * @param {Image} image\r\n   */\r\n  flipHorizontally(image) {\r\n    this.canvas.width = image.width;\r\n    this.canvas.height = image.height;\r\n\r\n    const flipHorizontally = (img, x, y) => {\r\n      // move to x + img's width\r\n      this.ctx.translate(x + img.width, y);\r\n\r\n      // scaleX by -1; this \"trick\" flips horizontally\r\n      this.ctx.scale(-1, 1);\r\n\r\n      // draw the img\r\n      // no need for x,y since we've already translated\r\n      this.ctx.drawImage(img, 0, 0);\r\n\r\n      // always clean up -- reset transformations to default\r\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    flipHorizontally(image, 0, 0);\r\n  }\r\n}\r\n","import ImageEffects from \"./ImageEffects\";\r\nimport Sprite from \"./Sprite\";\r\nimport SpriteSheetManager from \"./SpriteSheetManager\";\r\n\r\nconst SPRITE_PATH = process.env.PUBLIC_URL + \"/sprites/\";\r\n\r\nexport default class SpriteSheet {\r\n  constructor(imgPath, info, spriteSheetManager, isTopLevel = true) {\r\n    if (\r\n      !spriteSheetManager ||\r\n      !(spriteSheetManager instanceof SpriteSheetManager)\r\n    ) {\r\n      throw new Error(\"Invalid spriteSheetManager\");\r\n    }\r\n\r\n    /**\r\n     * @type {Object.<string, Sprite>}\r\n     */\r\n    this.sprites = {};\r\n    this.ssm = spriteSheetManager;\r\n    this.effectsCache = {};\r\n    this.creating = {};\r\n\r\n    this.name = \"\";\r\n\r\n    this.image = imgPath instanceof Image ? imgPath : new Image();\r\n\r\n    if (typeof imgPath === \"string\") {\r\n      this.image.src = SPRITE_PATH + imgPath;\r\n    }\r\n\r\n    this.image.addEventListener(\"error\", (e) => {\r\n      console.log(\"Error loading \" + this.image.src, e);\r\n    });\r\n\r\n    this.image.addEventListener(\"load\", () => {\r\n      this.image.loaded = true;\r\n      if (isTopLevel) {\r\n        this.ssm.incrementLoaded();\r\n      }\r\n\r\n      if (info.type === \"auto\") {\r\n        if (!info.width || !info.height) {\r\n          throw new Error(\r\n            \"Invalid width/height on info \" + JSON.stringify(info)\r\n          );\r\n        }\r\n\r\n        var width = info.width;\r\n        var height = info.height;\r\n\r\n        var border = info.border || 0;\r\n\r\n        var imageWidth = this.image.width - border * 2;\r\n        var imageHeight = this.image.height - border * 2;\r\n\r\n        if (width > imageWidth) {\r\n          throw new Error(\r\n            imgPath +\r\n              \" invalid sprite width \" +\r\n              width +\r\n              \" when image is \" +\r\n              imageWidth +\r\n              \"px wide\"\r\n          );\r\n        }\r\n\r\n        if (height > imageHeight) {\r\n          throw new Error(\r\n            imgPath +\r\n              \" invalid sprite height \" +\r\n              width +\r\n              \" when image is \" +\r\n              imageHeight +\r\n              \"px tall\"\r\n          );\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var i = 0;\r\n        while (true) {\r\n          this.sprites[i] = new Sprite(\r\n            {\r\n              x: x,\r\n              y: y,\r\n              w: width,\r\n              h: height,\r\n            },\r\n            this\r\n          );\r\n\r\n          i++;\r\n          x += width;\r\n          if (x >= imageWidth) {\r\n            x = border;\r\n            y += height;\r\n          }\r\n\r\n          if (y >= imageHeight) {\r\n            break;\r\n          }\r\n        }\r\n      } else if (info.type === \"manual\") {\r\n        if (!info.sprites) {\r\n          throw new Error(\"Invalid sprites on info \" + JSON.stringify(info));\r\n        }\r\n\r\n        var sprites = info.sprites;\r\n        for (var spriteName in sprites) {\r\n          this.sprites[spriteName] = new Sprite(sprites[spriteName], this);\r\n        }\r\n      } else if (info.type === \"increment_file_name\") {\r\n        var prefix = imgPath.split(\"1.png\")[0];\r\n        var suffix = \".png\";\r\n\r\n        if (!imgPath.includes(\"1.png\")) {\r\n          throw new Error(\"Invalid path\");\r\n        }\r\n\r\n        this.sprites[0] = new Sprite(\r\n          {\r\n            x: 0,\r\n            y: 0,\r\n            w: this.image.width,\r\n            h: this.image.height,\r\n          },\r\n          this\r\n        );\r\n\r\n        for (var i = 2; i <= info.max; i++) {\r\n          ((i) => {\r\n            // Placeholder sprite while it loads\r\n\r\n            var newImageSRC = prefix + i + suffix;\r\n\r\n            var childSprite = new Sprite(\r\n              {\r\n                x: 0,\r\n                y: 0,\r\n                w: this.image.width,\r\n                h: this.image.height,\r\n              },\r\n              new SpriteSheet(\r\n                newImageSRC,\r\n                {\r\n                  type: \"single\",\r\n                },\r\n                this.ssm\r\n              )\r\n            );\r\n\r\n            childSprite.indirect = true;\r\n\r\n            this.sprites[i - 1] = childSprite;\r\n          })(i);\r\n        }\r\n      } else if (info.type === \"single\") {\r\n        this.sprites = {\r\n          0: new Sprite(\r\n            {\r\n              x: 0,\r\n              y: 0,\r\n              w: this.image.width,\r\n              h: this.image.height,\r\n            },\r\n            this\r\n          ),\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {string} spriteName\r\n   * @returns {Sprite}\r\n   */\r\n  getSprite(spriteName) {\r\n    var sprite = this.sprites[spriteName];\r\n    if (!sprite) {\r\n      throw new Error(\r\n        \"Invalid sprite: \" +\r\n          spriteName +\r\n          \" (\" +\r\n          this.name +\r\n          \") [\" +\r\n          Object.keys(this.sprites).join(\",\") +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    return sprite;\r\n  }\r\n\r\n  getEffects(effects) {\r\n    if (!effects.length) {\r\n      return this;\r\n    }\r\n\r\n    var name = JSON.stringify(effects);\r\n\r\n    if (this.effectsCache[name]) {\r\n      return this.effectsCache[name];\r\n    }\r\n    if (this.creating[name]) {\r\n      return this;\r\n    }\r\n\r\n    this.creating[name] = true;\r\n\r\n    (async () => {\r\n      var imageEffects = new ImageEffects();\r\n      var newSpriteSheet = await imageEffects.applyEffectsToSpriteSheet(\r\n        this,\r\n        effects\r\n      );\r\n\r\n      if (!(newSpriteSheet instanceof SpriteSheet)) {\r\n        throw new Error(\"Expected SpriteSheet\");\r\n      }\r\n\r\n      this.effectsCache[name] = newSpriteSheet;\r\n      this.creating[name] = false;\r\n    })();\r\n\r\n    return this;\r\n  }\r\n}\r\n","import SpriteSheet from \"./SpriteSheet\";\r\n\r\nexport default class Sprite {\r\n  constructor(spriteInfo, spriteSheet) {\r\n    if (!(spriteSheet instanceof SpriteSheet)) {\r\n      throw new Error(\"Invalid sprite sheet\");\r\n    }\r\n\r\n    this.x = spriteInfo.x || 0;\r\n    this.y = spriteInfo.y || 0;\r\n    this.w = spriteInfo.w || 0;\r\n    this.h = spriteInfo.h || 0;\r\n\r\n    /**\r\n     * @type {SpriteSheet}\r\n     */\r\n    this.spriteSheet = spriteSheet;\r\n  }\r\n}\r\n","import Sprite from \"./Sprite.js\";\r\nimport SpriteSheet from \"./SpriteSheet.js\";\r\n\r\nexport default class SpriteSheetManager {\r\n  constructor() {\r\n    /**\r\n     * @type {Object.<string, SpriteSheet>}\r\n     */\r\n    this.spriteSheets = {};\r\n\r\n    this.assetsLoaded = 0;\r\n    this.assetsTotal = 0;\r\n    this.hasLoaded = false;\r\n    this.onLoaded = () => {};\r\n  }\r\n\r\n  incrementLoaded() {\r\n    this.assetsLoaded++;\r\n\r\n    console.log(this.assetsLoaded, this.assetsTotal);\r\n\r\n    setTimeout(() => {\r\n      if (this.assetsLoaded === this.assetsTotal) {\r\n        if (!this.hasLoaded) {\r\n          this.hasLoaded = true;\r\n          this.onLoaded();\r\n        }\r\n      }\r\n    }, 90);\r\n  }\r\n\r\n  addSpriteSheet(name, imgPath, info) {\r\n    var ss = new SpriteSheet(imgPath, info, this);\r\n    ss.name = name;\r\n\r\n    if (info.type === \"increment_file_name\") {\r\n      this.assetsTotal += info.max;\r\n    } else {\r\n      this.assetsTotal += 1;\r\n    }\r\n\r\n    this.spriteSheets[name] = ss;\r\n    return ss;\r\n  }\r\n\r\n  /**\r\n   * @param {string} spriteSheetName\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet(spriteSheetName) {\r\n    if (!this.spriteSheets[spriteSheetName]) {\r\n      throw new Error(\"Invalid sprite sheet: \" + spriteSheetName);\r\n    }\r\n    return this.spriteSheets[spriteSheetName];\r\n  }\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {Sprite}\r\n   */\r\n  getSprite(path) {\r\n    var spriteSheetName = path.split(\":\")[0];\r\n    var spriteName = path.split(\":\")[1];\r\n\r\n    return this.getSpriteSheet(spriteSheetName).getSprite(spriteName);\r\n  }\r\n\r\n  /**\r\n   * @param {Object} spriteInfo\r\n   * @param {string} spriteInfo.sprite\r\n   * @param {number} spriteInfo.frame\r\n   * @param {string[]} spriteInfo.effects\r\n   * @returns {Sprite}\r\n   */\r\n  getSpriteFromInfoObject(spriteInfo) {\r\n    var sprite = spriteInfo.sprite;\r\n    var frame = spriteInfo.frame;\r\n\r\n    var effects = spriteInfo.effects || [];\r\n\r\n    var spriteSheet = this.getSpriteSheet(sprite).getEffects(effects);\r\n\r\n    if (spriteSheet) {\r\n      return spriteSheet.getSprite(frame);\r\n    } else {\r\n      throw new Error(\"No sprite sheet\");\r\n    }\r\n  }\r\n}\r\n","import GameObject from \"./GameObject\";\r\n\r\nexport default class Coin extends GameObject {\r\n  constructor(game) {\r\n    super(game);\r\n\r\n    this.w = 0.25;\r\n    this.h = 0.25;\r\n    this.value = 10;\r\n    this.rotation = 0;\r\n    this.bobOffset = 0;\r\n    this.collected = false;\r\n    this.collectTimer = 0;\r\n  }\r\n\r\n  render() {\r\n    // Use camera-aware renderer so it shows up at any zoom\r\n    const bobY = this.y + Math.sin(this.bobOffset) * 0.1;\r\n    const centerX = this.x + this.w / 2;\r\n    const centerY = bobY + this.h / 2;\r\n\r\n    // Outer rim\r\n    this.game.render.drawCircle(centerX, centerY, (this.w / 2) * (1 + this.collectTimer * 0.8), \"#B8860B\");\r\n    // Inner gold\r\n    this.game.render.drawCircle(centerX, centerY, (this.w / 2) * 0.8 * (1 + this.collectTimer * 0.6), \"#FFD700\");\r\n    // Shine\r\n    this.game.render.drawCircle(centerX + 0.03, centerY - 0.03, (this.w / 2) * 0.18, \"#FFF3B0\");\r\n  }\r\n\r\n  update(delta) {\r\n    // Rotate the coin\r\n    this.rotation += delta * 3;\r\n    \r\n    // Bob up and down\r\n    this.bobOffset += delta * 4;\r\n    \r\n    // Check collision with player\r\n    if (this.collidesWith(this.game.player) && !this.collected) {\r\n      this.collected = true;\r\n      this.game.addScore(this.value);\r\n      this.game.particleSystem.spawnParticles(this.x + this.w/2, this.y + this.h/2, 12, 0.6);\r\n    }\r\n\r\n    // Simple collect animation then remove\r\n    if (this.collected) {\r\n      this.collectTimer += delta * 3; // quick pop\r\n      if (this.collectTimer >= 0.5) {\r\n        this.delete = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import GameObject from \"./GameObject\";\r\n\r\nexport default class Bullet extends GameObject {\r\n  constructor(game, x, y, directionX, directionY = 0) {\r\n    super(game);\r\n    \r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 0.1;\r\n    this.h = 0.1;\r\n    this.dx = directionX;\r\n    this.dy = directionY;\r\n    this.speed = 5; // slower so you can see and dodge\r\n    this.lifeTime = 3; // Bullet disappears after 3 seconds\r\n    this.age = 0;\r\n  }\r\n\r\n  render() {\r\n    // Draw a small bullet\r\n    this.game.ctx.save();\r\n    this.game.ctx.fillStyle = \"#FF0000\";\r\n    this.game.ctx.fillRect(this.x, this.y, this.w, this.h);\r\n    this.game.ctx.restore();\r\n  }\r\n\r\n  update(delta) {\r\n    // Move bullet\r\n    this.x += this.dx * this.speed * delta;\r\n    this.y += this.dy * this.speed * delta;\r\n    \r\n    // Age the bullet\r\n    this.age += delta;\r\n    if (this.age >= this.lifeTime) {\r\n      this.delete = true;\r\n      return;\r\n    }\r\n    \r\n    // Check collision with player\r\n    if (this.collidesWith(this.game.player)) {\r\n      this.game.playerDie();\r\n      this.delete = true;\r\n    }\r\n    \r\n    // Check if bullet is out of bounds\r\n    if (this.x < 0 || this.x > this.game.levelWidth || \r\n        this.y < 0 || this.y > this.game.levelHeight) {\r\n      this.delete = true;\r\n    }\r\n  }\r\n}\r\n","import GameObject from \"./GameObject\";\r\n\r\nexport default class FinishLine extends GameObject {\r\n  constructor(game, x, y) {\r\n    super(game);\r\n    \r\n    this.x = x;\r\n    this.y = y;\r\n    this.w = 1;\r\n    this.h = 2;\r\n    this.animationTime = 0;\r\n  }\r\n\r\n  render() {\r\n    // Draw using camera-aware renderer\r\n    const hue = (this.animationTime * 180) % 360;\r\n    this.game.render.drawRect(this.x, this.y, this.w, this.h, `hsl(${hue}, 100%, 50%)`);\r\n    // White border posts\r\n    this.game.render.drawRect(this.x, this.y, 0.08, this.h, \"#FFFFFF\");\r\n    this.game.render.drawRect(this.x + this.w - 0.08, this.y, 0.08, this.h, \"#FFFFFF\");\r\n  }\r\n\r\n  update(delta) {\r\n    this.animationTime += delta;\r\n    \r\n    // Check if player reaches finish line\r\n    if (this.collidesWith(this.game.player)) {\r\n      this.game.gameWin();\r\n    }\r\n  }\r\n}\r\n","import Camera from \"./Camera\";\r\nimport Controller from \"./Controller\";\r\nimport Entity from \"./Entity\";\r\nimport InputManager from \"./InputManager\";\r\nimport ParticleSystem from \"./ParticleSystem\";\r\nimport Player from \"./Player\";\r\nimport Render from \"./Render\";\r\nimport SpriteSheetManager from \"./SpriteSheetManager\";\r\nimport Coin from \"./Coin\";\r\nimport Bullet from \"./Bullet\";\r\nimport FinishLine from \"./FinishLine\";\r\nimport { v4 } from \"uuid\";\r\nimport { getRandomInteger } from \"./random\";\r\n\r\nexport default class Game {\r\n  constructor(canvas, ctx, ssm) {\r\n    /**\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas = canvas;\r\n\r\n    /**\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.ctx = ctx;\r\n\r\n    /**\r\n     * @type {SpriteSheetManager}\r\n     */\r\n    this.ssm = ssm;\r\n\r\n    this.render = new Render(this);\r\n    this.camera = new Camera(this);\r\n\r\n    this.inputManager = new InputManager();\r\n    this.particleSystem = new ParticleSystem(this);\r\n\r\n    this.player = new Player(this);\r\n    this.controller = new Controller(this);\r\n\r\n    /**\r\n     * @type {Object.<string, Entity>}\r\n     */\r\n    this.entities = {};\r\n\r\n    const level = [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0],\r\n      [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 5, 5, 0],\r\n      [0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5],\r\n      [0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0],\r\n      [5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],\r\n    ];\r\n\r\n    this.showInfo = false;\r\n    this.map = level.flat(1);\r\n\r\n    this.levelWidth = level[0].length;\r\n    this.levelHeight = level.length;\r\n    this.camera.endY = this.levelHeight - 7;\r\n    this.camera.startY = this.levelHeight - 15;\r\n    this.camera.maxY = this.levelHeight;\r\n    this.camera.minX = 0;\r\n\r\n    this.player.y = this.levelHeight - 12;\r\n\r\n    this.spawnTick = 0;\r\n    this.fpsTick = 0;\r\n    this.fps = 0;\r\n\r\n    // Game state\r\n    this.score = 0;\r\n    this.highScore = parseInt(localStorage.getItem('platformer_high_score') || '0');\r\n    this.gameState = 'playing'; // 'playing', 'dead', 'won'\r\n    this.finishLine = null;\r\n\r\n    // Create finish line at the end of the level\r\n    this.finishLine = new FinishLine(this, this.levelWidth - 3, this.levelHeight - 12);\r\n\r\n    // Spawn some initial coins\r\n    for (let i = 0; i < 5; i++) {\r\n      this.spawnCoin(getRandomInteger(2, this.levelWidth - 4), getRandomInteger(this.levelHeight - 15, this.levelHeight - 8));\r\n    }\r\n\r\n    if (this.map.length !== this.levelWidth * this.levelHeight) {\r\n      throw new Error(\"Invalid map length: \" + this.map.length);\r\n    }\r\n\r\n    /**\r\n     * - `0` = No collision\r\n     * - `1` = Left\r\n     * - `2` = Right\r\n     * - `4` = Top\r\n     * - `8` = Bottom\r\n     */\r\n    this.collisionMap = this.createCollisionMap();\r\n    \r\n    // Seed neatly aligned coins along top surfaces near the start\r\n    this.seedCoins();\r\n  }\r\n\r\n  end() {\r\n    this.inputManager.end();\r\n  }\r\n\r\n  spawnEntity() {\r\n    var id = v4();\r\n\r\n    var entity = new Entity(this);\r\n    this.entities[id] = entity;\r\n\r\n    var direction = Math.random() > 0.5 ? -1 : 1;\r\n\r\n    if (this.camera.startX <= 0) {\r\n      direction = 1;\r\n    }\r\n\r\n    if (direction === -1) {\r\n      entity.x = this.camera.endX + 2;\r\n    } else {\r\n      entity.x = this.camera.startX - 2;\r\n    }\r\n\r\n    entity.direction = direction;\r\n\r\n    entity.y = this.player.y + getRandomInteger(-2, 2);\r\n  }\r\n\r\n  spawnCoin(x, y) {\r\n    // Ensure coin sits on floor: snap to tile top if solid beneath\r\n    var coinX = Math.floor(x) + 0.5 - 0.125; // center on tile\r\n    var coinY = Math.floor(y);\r\n    // Find ground by scanning downward until we hit a solid tile\r\n    for (let dy = 0; dy < 20; dy++) {\r\n      const tileX = Math.floor(coinX);\r\n      const tileY = Math.floor(coinY + dy);\r\n      const idx = this.convertCoordinatesToIndex(tileX, tileY + 1);\r\n      const belowSolid = this.map[idx];\r\n      if (belowSolid) {\r\n        coinY = tileY - 0.35; // place a bit above ground\r\n        break;\r\n      }\r\n    }\r\n\r\n    var id = v4();\r\n    var coin = new Coin(this);\r\n    coin.x = coinX;\r\n    coin.y = coinY;\r\n    this.entities[id] = coin;\r\n  }\r\n\r\n  spawnBullet(x, y, directionX, directionY = 0) {\r\n    var id = v4();\r\n    var bullet = new Bullet(this, x, y, directionX, directionY);\r\n    this.entities[id] = bullet;\r\n  }\r\n\r\n  addScore(points) {\r\n    this.score += points;\r\n    if (this.score > this.highScore) {\r\n      this.highScore = this.score;\r\n      localStorage.setItem('platformer_high_score', this.highScore.toString());\r\n    }\r\n  }\r\n\r\n  playerDie() {\r\n    // Only die when actually hit (this is called by bullet collision)\r\n    this.gameState = 'dead';\r\n    this.particleSystem.spawnParticles(this.player.x + this.player.w/2, this.player.y + this.player.h/2, 15, 0.8);\r\n  }\r\n\r\n  gameWin() {\r\n    this.gameState = 'won';\r\n    this.particleSystem.spawnParticles(this.player.x + this.player.w/2, this.player.y + this.player.h/2, 20, 1.0, \"#00FF00\");\r\n  }\r\n\r\n  restart() {\r\n    this.score = 0;\r\n    this.gameState = 'playing';\r\n    this.entities = {};\r\n    this.player.x = 0;\r\n    this.player.y = this.levelHeight - 12;\r\n    this.player.velocityX = 0;\r\n    this.player.velocityY = 0;\r\n    this.camera.x = 0;\r\n    this.camera.y = this.camera.startY;\r\n    \r\n    // Recreate finish line\r\n    this.finishLine = new FinishLine(this, this.levelWidth - 3, this.levelHeight - 12);\r\n\r\n    // Seed coins again\r\n    this.seedCoins();\r\n  }\r\n\r\n  createCollisionMap() {\r\n    var collisionMap = [];\r\n\r\n    for (var i = 0; i < this.map.length; i++) {\r\n      var block = this.map[i];\r\n\r\n      var flag = 0;\r\n\r\n      if (block) {\r\n        var [x, y] = this.convertIndexToCoordinates(i);\r\n        var top = this.map[this.convertCoordinatesToIndex(x, y - 1)];\r\n        var bottom = this.map[this.convertCoordinatesToIndex(x, y + 1)];\r\n\r\n        var left = this.map[this.convertCoordinatesToIndex(x - 1, y)];\r\n        var right = this.map[this.convertCoordinatesToIndex(x + 1, y)];\r\n\r\n        if (x !== 0) {\r\n          flag |= !left ? 1 : 0;\r\n        }\r\n        if (x !== this.levelWidth - 1) {\r\n          flag |= !right ? 2 : 0;\r\n        }\r\n        if (y !== 0) {\r\n          flag |= !top ? 4 : 0;\r\n        }\r\n        if (y !== this.levelHeight - 1) {\r\n          flag |= !bottom ? 8 : 0;\r\n        }\r\n      }\r\n\r\n      collisionMap.push(flag);\r\n    }\r\n\r\n    return collisionMap;\r\n  }\r\n\r\n  getViewport() {\r\n    return [this.canvas.width, this.canvas.height];\r\n  }\r\n\r\n  start() {\r\n    this.inputManager.start();\r\n    this.particleSystem.particles = [];\r\n\r\n    this.camera.followingObject = this.player;\r\n  }\r\n\r\n  convertIndexToCoordinates(i) {\r\n    return [i % this.levelWidth, Math.floor(i / this.levelWidth)];\r\n  }\r\n\r\n  convertCoordinatesToIndex(x, y) {\r\n    return y * this.levelWidth + x;\r\n  }\r\n\r\n  renderGame(delta) {\r\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // var spriteSheet = this.ssm.getSpriteSheet(\"tile\");\r\n\r\n    // var sprites = Object.keys(spriteSheet.sprites);\r\n\r\n    // var gap = 0.05;\r\n\r\n    // var x = this.camera.startX + gap,\r\n    //   y = this.camera.startY + gap;\r\n\r\n    // for (var spriteName of sprites) {\r\n    //   var sprite = spriteSheet.sprites[spriteName];\r\n\r\n    //   var w = sprite.w / 100;\r\n    //   var h = sprite.h / 100;\r\n\r\n    //   this.render.drawRect(x, y, w, h, \"#fff\");\r\n\r\n    //   this.render.drawSprite(\r\n    //     {\r\n    //       sprite: spriteSheet.name,\r\n    //       frame: spriteName,\r\n    //       effects: [],\r\n    //     },\r\n    //     x,\r\n    //     y,\r\n    //     w,\r\n    //     h\r\n    //   );\r\n\r\n    //   this.render.drawText(spriteName, x, y + 0.1, \"14\", \"#444499\");\r\n\r\n    //   x += h + gap;\r\n    //   if (x >= this.camera.getWidth() - gap) {\r\n    //     x = this.camera.startX + gap;\r\n    //     y += h + gap;\r\n    //   }\r\n    // }\r\n\r\n    // for (var i = 0; i < 3; i++) {\r\n    //   var pow = ((1 / (4 - i)) * 1) / (4 - i);\r\n    //   var h = this.levelHeight;\r\n    //   var x =\r\n    //     -this.levelHeight +\r\n    //     -this.camera.getCenter()[0] * pow +\r\n    //     this.camera.getCenter()[0];\r\n    //   var w = h / 0.5625;\r\n    //   while (x < this.camera.endX) {\r\n    //     this.render.drawSprite(\r\n    //       {\r\n    //         sprite: \"background\",\r\n    //         frame: i,\r\n    //       },\r\n    //       x,\r\n    //       this.camera.startY,\r\n    //       w,\r\n    //       h\r\n    //     );\r\n    //     x += w;\r\n    //   }\r\n    // }\r\n\r\n    // for (var i = 0; i < this.map.length; i++) {\r\n    //   var block = this.map[i];\r\n    //   if (block) {\r\n    //     var [x, y] = this.convertIndexToCoordinates(i);\r\n    //     // this.render.drawRect(x - 0.01, y - 0.01, 1.02, 1.02, \"#333\");\r\n    //     this.render.drawSprite(\r\n    //       {\r\n    //         sprite: \"tile\",\r\n    //         frame: block - 1,\r\n    //         effects: [],\r\n    //       },\r\n    //       x,\r\n    //       y,\r\n    //       1,\r\n    //       1\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n    this.ctx.fillStyle = \"#fff\";\r\n    this.ctx.font = \"20px Readex Pro\";\r\n    this.ctx.fillText(this.fps + \"\", 5, 20);\r\n    this.ctx.font = \"14px Readex Pro\";\r\n\r\n    this.player.render(delta);\r\n    for (var entityUUID in this.entities) {\r\n      var entity = this.entities[entityUUID];\r\n\r\n      entity.render(delta);\r\n    }\r\n\r\n    for (var i = 0; i < this.map.length; i++) {\r\n      var collisionFlag = this.collisionMap[i];\r\n      var [x, y] = this.convertIndexToCoordinates(i);\r\n\r\n      if (\r\n        x + 1 > this.camera.startX &&\r\n        y + 1 > this.camera.startY &&\r\n        x <= this.camera.endX &&\r\n        y <= this.camera.endY\r\n      ) {\r\n        var color = \"#fff\";\r\n\r\n        var width = 0.025;\r\n\r\n        if (collisionFlag & 1) {\r\n          this.render.drawRect(x, y, width, 1, color);\r\n          this.render.drawText(\"1\", x + 0.1, y + 0.53, 14);\r\n        }\r\n        if (collisionFlag & 2) {\r\n          this.render.drawRect(x + (1 - width), y, width, 1, color);\r\n          this.render.drawText(\"2\", x + 0.82, y + 0.53, 14);\r\n        }\r\n        if (collisionFlag & 4) {\r\n          this.render.drawRect(x, y, 1, width, color);\r\n          this.render.drawText(\"4\", x + 0.49, y + 0.2, 14);\r\n        }\r\n        if (collisionFlag & 8) {\r\n          this.render.drawRect(x, y + (1 - width), 1, width, color);\r\n          this.render.drawText(\"8\", x + 0.49, y + 0.92, 14);\r\n        }\r\n      }\r\n    }\r\n\r\n    var tileKeys = Object.keys(this.player.tiles);\r\n    for (var i = 0; i < tileKeys.length; i++) {\r\n      var tile = tileKeys[i];\r\n      var collisionFlag = this.player.tiles[tile];\r\n      var [x, y] = this.convertIndexToCoordinates(tile);\r\n      if (collisionFlag & 1) {\r\n        this.render.drawRect(x, y, 0.05, 1, \"#fff\");\r\n      }\r\n      if (collisionFlag & 2) {\r\n        this.render.drawRect(x + 0.95, y, 0.05, 1, \"#fff\");\r\n      }\r\n      if (collisionFlag & 4) {\r\n        this.render.drawRect(x, y, 1, 0.05, \"#fff\");\r\n      }\r\n      if (collisionFlag & 8) {\r\n        this.render.drawRect(x, y + 0.95, 1, 0.05, \"#fff\");\r\n      }\r\n    }\r\n\r\n    this.particleSystem.render();\r\n\r\n    // Render finish line\r\n    if (this.finishLine) {\r\n      this.finishLine.render();\r\n    }\r\n\r\n    // Render UI\r\n    this.renderUI();\r\n  }\r\n\r\n  renderUI() {\r\n    // Save canvas state\r\n    this.ctx.save();\r\n    \r\n    // Reset transform for UI rendering\r\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    \r\n    // Soft background behind HUD\r\n    this.ctx.globalAlpha = 0.35;\r\n    this.ctx.fillStyle = \"#000000\";\r\n    this.ctx.fillRect(10, 10, 200, 60);\r\n    this.ctx.globalAlpha = 1;\r\n\r\n    // Draw score\r\n    this.ctx.fillStyle = \"#FFFFFF\";\r\n    this.ctx.font = \"bold 20px Arial\";\r\n    this.ctx.textAlign = \"left\";\r\n    this.ctx.fillText(`Score: ${this.score}`, 20, 35);\r\n    \r\n    // Draw high score\r\n    this.ctx.fillStyle = \"#FFFF00\";\r\n    this.ctx.font = \"bold 18px Arial\";\r\n    this.ctx.fillText(`High Score: ${this.highScore}`, 20, 60);\r\n    \r\n    // Draw game state messages\r\n    if (this.gameState === 'dead') {\r\n      this.ctx.fillStyle = \"#FF0000\";\r\n      this.ctx.font = \"40px Arial\";\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2);\r\n      \r\n      this.ctx.fillStyle = \"#FFFFFF\";\r\n      this.ctx.font = \"20px Arial\";\r\n      this.ctx.fillText(\"Press R to restart\", this.canvas.width / 2, this.canvas.height / 2 + 40);\r\n    } else if (this.gameState === 'won') {\r\n      this.ctx.fillStyle = \"#00FF00\";\r\n      this.ctx.font = \"40px Arial\";\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.fillText(\"YOU WIN!\", this.canvas.width / 2, this.canvas.height / 2);\r\n      \r\n      this.ctx.fillStyle = \"#FFFFFF\";\r\n      this.ctx.font = \"20px Arial\";\r\n      this.ctx.fillText(\"Press R to restart\", this.canvas.width / 2, this.canvas.height / 2 + 40);\r\n    }\r\n    \r\n    // Reset text align\r\n    this.ctx.textAlign = \"left\";\r\n    \r\n    // Restore canvas state\r\n    this.ctx.restore();\r\n  }\r\n\r\n  isSolid(x, y) {\r\n    if (x < 0 || y < 0 || x >= this.levelWidth || y >= this.levelHeight) return false;\r\n    return !!this.map[this.convertCoordinatesToIndex(x, y)];\r\n  }\r\n\r\n  seedCoins() {\r\n    // Place small coins only on flat tops within first visible stretch\r\n    let placed = 0;\r\n    const maxCoins = 12;\r\n    for (let x = 1; x < Math.min(this.levelWidth - 1, 40); x++) {\r\n      for (let y = 1; y < this.levelHeight - 1; y++) {\r\n        // air tile with solid immediately below -> top surface\r\n        if (!this.isSolid(x, y) && this.isSolid(x, y + 1)) {\r\n          // avoid clutter: place every 3rd tile with some randomness\r\n          if (x % 3 === 0 && Math.random() < 0.7) {\r\n            this.spawnCoin(x + 0.5, y - 0.1);\r\n            placed++;\r\n            if (placed >= maxCoins) return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateGame(delta) {\r\n    // Handle restart\r\n    if (this.inputManager.isKeyPressed(\"r\") && (this.gameState === 'dead' || this.gameState === 'won')) {\r\n      this.restart();\r\n      return;\r\n    }\r\n\r\n    // Only update game if playing\r\n    if (this.gameState !== 'playing') {\r\n      return;\r\n    }\r\n\r\n    this.fpsTick += delta;\r\n    if (this.fpsTick > 0.5) {\r\n      this.fpsTick = 0;\r\n\r\n      this.fps = Math.floor(1 / delta);\r\n    }\r\n\r\n    this.spawnTick += delta;\r\n    if (this.spawnTick > 2) {\r\n      this.spawnTick = 0;\r\n\r\n      this.spawnEntity();\r\n    }\r\n\r\n    // Spawn coins occasionally on nearby floor\r\n    if (Math.random() < 0.1) {\r\n      this.spawnCoin(this.player.x + getRandomInteger(-6, 6), this.player.y);\r\n    }\r\n\r\n    this.controller.update(delta);\r\n\r\n    var deleteUUIDs = [];\r\n\r\n    for (var entityUUID in this.entities) {\r\n      var entity = this.entities[entityUUID];\r\n\r\n      entity.update(delta);\r\n\r\n      if (entity.delete) {\r\n        deleteUUIDs.push(entityUUID);\r\n      }\r\n    }\r\n\r\n    for (var entityUUID of deleteUUIDs) {\r\n      delete this.entities[entityUUID];\r\n    }\r\n\r\n    this.player.update(delta);\r\n    this.particleSystem.update(delta);\r\n    this.camera.update(delta);\r\n\r\n    // Update finish line\r\n    if (this.finishLine) {\r\n      this.finishLine.update(delta);\r\n    }\r\n  }\r\n}\r\n","const SpriteSheets = {\r\n  player_idle: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/idle/1.png\",\r\n    max: 7,\r\n  },\r\n  player_run: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/run/1.png\",\r\n    max: 8,\r\n  },\r\n  player_jump: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/jump/1.png\",\r\n    max: 3,\r\n  },\r\n  player_land: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/land/1.png\",\r\n    max: 2,\r\n  },\r\n  player_slide: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/slide/1.png\",\r\n    max: 4,\r\n  },\r\n  player_roll: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/roll/1.png\",\r\n    max: 10,\r\n  },\r\n  player_combat_combo_01_attack_01: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_01/1.png\",\r\n    max: 6,\r\n  },\r\n  player_combat_combo_01_attack_02: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_02/1.png\",\r\n    max: 5,\r\n  },\r\n  player_combat_combo_01_attack_03: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_03/1.png\",\r\n    max: 4,\r\n  },\r\n  player_combat_combo_01_attack_04: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_04/1.png\",\r\n    max: 9,\r\n  },\r\n  player_combat_ground_slam: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_ground_slam/1.png\",\r\n    max: 10,\r\n  },\r\n  player_look_up: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/look_up/1.png\",\r\n    max: 3,\r\n  },\r\n  player_knockback: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/knockback/1.png\",\r\n    max: 6,\r\n  },\r\n  player_ledge_climb: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/ledge_climb/1.png\",\r\n    max: 8,\r\n  },\r\n  player_ledge_hang: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/ledge_hang/1.png\",\r\n    max: 6,\r\n  },\r\n  player_wall_jump: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/wall_jump/1.png\",\r\n    max: 11,\r\n  },\r\n  player_wall_slide: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/wall_slide/1.png\",\r\n    max: 6,\r\n  },\r\n  player_crouch: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/crouch/1.png\",\r\n    max: 6,\r\n  },\r\n  player_crawl: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/crawl/1.png\",\r\n    max: 8,\r\n  },\r\n  player_front_flip: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/front_flip/1.png\",\r\n    max: 14,\r\n  },\r\n};\r\n\r\nexport default SpriteSheets;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Game from \"./Game\";\r\nimport SpriteSheets from \"./data/SpriteSheets\";\r\nimport SpriteSheetManager from \"./SpriteSheetManager\";\r\nimport SpriteSheet from \"./SpriteSheet\";\r\n\r\nfunction App() {\r\n  var canvasRef = useRef();\r\n\r\n  /**\r\n   * Show menu\r\n   */\r\n  var [menu, setMenu] = useState(false);\r\n  var gameRef = useRef();\r\n\r\n  useEffect(() => {\r\n    var ssm = new SpriteSheetManager();\r\n\r\n    Object.keys(SpriteSheets).forEach((spriteSheetName) => {\r\n      var data = SpriteSheets[spriteSheetName];\r\n      ssm.addSpriteSheet(spriteSheetName, data.imgPath, data);\r\n    });\r\n\r\n    /**\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    var canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    var ctx = canvas.getContext(\"2d\");\r\n\r\n    var last = performance.now();\r\n\r\n    var game = new Game(canvas, ctx, ssm);\r\n    gameRef.current = game;\r\n\r\n    window.game = game;\r\n\r\n    var cb = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n\r\n      canvas.style.width = window.innerWidth + \"px\";\r\n      canvas.style.height = window.innerHeight + \"px\";\r\n\r\n      game.camera.updateAspectRatio();\r\n    };\r\n    cb();\r\n    var active = true;\r\n    game.active = true;\r\n\r\n    function update() {\r\n      var now = performance.now();\r\n      var delta = (now - last) / 1000;\r\n      last = now;\r\n\r\n      if (delta > 0.25) {\r\n        delta = 0.25;\r\n      }\r\n\r\n      ctx.fillStyle = \"#000\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (game.active) {\r\n        game.updateGame(delta);\r\n      }\r\n      game.renderGame(delta);\r\n\r\n      active && requestAnimationFrame(update);\r\n    }\r\n\r\n    ssm.onLoaded = () => {\r\n      Object.keys(ssm.spriteSheets).forEach((key) => {\r\n        if (key.includes(\"player_\")) {\r\n          ssm.spriteSheets[key].getEffects([\"flipHorizontally\"]);\r\n        }\r\n      });\r\n\r\n      update();\r\n\r\n      setTimeout(() => {\r\n        game.start();\r\n        // setMenu(true);\r\n      }, 100);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", cb);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(update);\r\n      window.removeEventListener(\"resize\", cb);\r\n\r\n      active = false;\r\n\r\n      game.end();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={!menu ? \"hide-cursor\" : \"\"}>\r\n      <div className={\"main-menu\" + (menu ? \" main-menu-show\" : \"\")}>\r\n        <h1>Platformer</h1>\r\n        <p>by: MichaelXF</p>\r\n\r\n        <button\r\n          className='main-btn'\r\n          onClick={() => {\r\n            // Start game\r\n            setMenu(false);\r\n          }}\r\n        >\r\n          Play\r\n        </button>\r\n      </div>\r\n\r\n      <canvas ref={canvasRef} />\r\n\r\n      <div className='controls'>\r\n        <kbd>W</kbd>\r\n        <kbd>A</kbd>\r\n        <kbd>S</kbd>\r\n        <kbd>D</kbd>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}